#! /usr/bin/env python3
from math import floor, sqrt

from sympy.ntheory import discrete_log
from sympy.ntheory.modular import crt
from Crypto.Cipher import AES
from Crypto.Util.number import long_to_bytes

n=108128463235366041945340055252601236436722739562475915350171739661985141189580464478045666055658415124708942200665822026776636750895687970890616333253250505703801852713697535822641138816186964174970405303684597286026503767563484561052251599425037353225030719144262527511767887504882025361455732252568245241328749579315841478926611457369854605767271323936207107154599088557953206753925515026853726256802032820977856143695676153815279808422071281476592023116966640535805557931924779136571539467894473239958652033663643282006156900918910796527501036194067120821185680751335989131443693065124655916698379331171124187717464055786609894241
g=2
A=43265783938284422159731338281333544085860484210221774766220313060776648592040529820335725611507109611765369212409042411477262611589337266261297631639604529039055337948778922519137188108967133663843931970818298862808900209206061701180025066680656218913388221533889627635942988977441168762657309256001690071845124182959674041443391114838641869731557300759367398401339406947072833093635152191458455722561211241171612758609639954137721278129494310931727028140316670655735111369086569741225399324541054361361364738219277775415663927891084975497156058676028595606318379277674475779500812361470343810320842452358428892975951130740914380273
B=97434360793545716674176132071237759858192315851702188898459377972575651558497444498024493453556104611888588675566788039443518670403128940852429855059424462387101340780281439844038248714618377385511124923353379023802633564592790924499414217145171245383082890012782435909483236208213492910293847714222853703641424685252423047605708815812554876956416595215213745755649719820615853449594163190873209666735301878757083554371157742469032717942236866396861058010408573356006525564520031587705565777117585443702604408226724492760420035075811467421853451452661282493610273181206226438291229660367124860586851301087297231469295004495974834555


# trovati con factor db
p =4201194382473724823946246369346444780058722825268751353622767260183935447205795410417708279026655410837681044208820543971556174955272571543279103546036946903688486408381750497037497524473149533123556229033077657037452523962762626008378398390600409746251823505465922258908732039685353291496588990197836270398014253339
q =25737553036453033170874873232492616472696251153498345345893349066914349319700028526259065151440470760781885101651616163782998343068021108194360596481454344775056268387636520767391616783538213196153998980567585557740463660083917063025907541863194906635695830144597030344814258845557193440907517374289359866191267367219


iv=bytes.fromhex('c2d73d0f73170d868e46b82e5c7aef0c')
FLAG=bytes.fromhex('4b696e66abc27ec5da59c08cb899dd3bb745d49909aa4261a8770df135b035d37dbd4bbbb2540c035291240d6ce75c10a87fa62aa1a6cea7cf02b0f736ff0134')


# partialP = discrete_log(p,A,g)
# print(discrete_log(q,A,g))

partialP = 2574344978059425101509656713024569355909681345245923325093240491307891034393646097713677608532114491046643692904690641590773457142364467030707536604652999407348843908796739341278083026184921297576562542803017198840157997919043356759185986405090616080532965549904935279732522566876105657464732130138963276886384714948

partialQ = 18697604901981754675868711024109440386473047307484980778988970361317838038400567975906465961078264885898529200232083660971519419818281368404736221597693627694243080581316037740536741135604833619675827181650845142273889580480658374292719327300745472986399730248241059458932604188280729475234780904030595505956006521194

chineseSum = crt([p-1,q-1], [partialP,partialQ])[0]

assert(A == pow(g,chineseSum,n))

key = pow(B,chineseSum,n)
key = long_to_bytes(key)[:16]
flag = AES.new(key, AES.MODE_CBC, iv).decrypt(FLAG)

print(flag)